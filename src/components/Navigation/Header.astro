---
import { Icon } from "astro-icon/components";
import { sections } from "@/data/sections";
---

<nav
  class="z-50 hidden lg:fixed right-5 top-1/2 transform -translate-y-1/2 lg:flex flex-col items-center gap-4 bg-blue-500/10 rounded-xl p-4"
>
  {
    sections.map((section) => (
      <a
        aria-label={section.name}
        href={`${section.href}`}
        class="transition-all duration-300 ease-in-out hover:text-blue-500 hover:scale-125"
      >
        <Icon name={section.icon} class="size-6" />
      </a>
    ))
  }
</nav>

<script>
  function handleIntersection(entries: IntersectionObserverEntry[]) {
    entries.forEach((entry) => {
      const id = entry.target.getAttribute("id");
      const navLink = document.querySelector(`nav a[href="#${id}"]`);

      if (navLink) {
        if (entry.isIntersecting) {
          document.querySelectorAll("nav a").forEach((link) => {
            link.classList.remove("scale-130");
          });
          navLink.classList.add("scale-130");
        }
      }
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section[id]");

    const observer = new IntersectionObserver(handleIntersection, {
      threshold: 0.5,
      rootMargin: "-10% 0px -10% 0px",
    });

    sections.forEach((section) => {
      observer.observe(section);
    });
  });
</script>
